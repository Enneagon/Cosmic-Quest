#new:Actor $SpikedGoombandit 
{
% stats
[Index]         9b 
[Level]         10`b 
[MaxHP]         4`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_SpikedGoombandit 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_SpikedGoombandit 
[Script]      $Script_Init_SpikedGoombandit 
% move effectiveness
[Escape]       90`b 
[Item]        100`b 
[AirLift]     100`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function $Function_80218000_SpikedGoombandit 
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   4C:  LA        A3, $FloatTable_SpikedGoombandit
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_SpikedGoombandit)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_SpikedGoombandit)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_8021818C_SpikedGoombandit 
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218000_SpikedGoombandit
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}

#new:DefenseTable $DefenseTable_SpikedGoombandit 
{
.Element:Normal 0`
.Element:End
}

#new:StatusTable $StatusTable_SpikedGoombandit 
{
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep     100`
.Status:Poison    100`
.Status:Frozen    100`
.Status:Dizzy     100`
.Status:Fear      100`
.Status:Static    100`
.Status:Paralyze  100`
.Status:Shrink    100`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_SpikedGoombandit 
{
00800000 01000000 001400FF $IdleAnimations_SpikedGoombandit $DefenseTable_SpikedGoombandit 00000010 00000000 00F60000 00000000 
}

#new:IdleAnimations $IdleAnimations_SpikedGoombandit 
{
.Status:Normal    00270001
.Status:Stone     00270000
.Status:Sleep     00270008
.Status:Poison    00270001
.Status:Stop      00270000
.Status:Static    00270001
.Status:Paralyze  00270000
.Status:Dizzy     00270007
.Status:Fear      00270007
.Status:End
}

#new:IdleAnimations $IdleAnimations_SpikedGoombanditShuffling 
{
.Status:Normal    00270003
.Status:Stone     00270000
.Status:Sleep     00270008
.Status:Poison    00270001
.Status:Stop      00270000
.Status:Static    00270003
.Status:Paralyze  00270000
.Status:Dizzy     00270007
.Status:Fear      00270007
.Status:End
}

#new:Script $Script_Init_SpikedGoombandit 
{
     Set *Var0 = ( *MB_DifficultyLevel + *MB_SectorsCompleted + 4` ) % Add to Minimum HP
     Call  $SetMaxHPByDifficulty ( *Var0 ) % Dynamically sets HP
     Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_SpikedGoombandit )
     Call  BindIdle  ( .Actor:Self $Script_Idle_SpikedGoombandit )
     Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_SpikedGoombandit )
     Return
     End
}

#new:Script $Script_Idle_SpikedGoombandit 
{
     Label  A
     Call  RandInt   ( 00000050 *Var0 )
     Add   *Var0  00000050 
     Loop  *Var0 
          Label  0
     	Call  GetStatusFlags    ( .Actor:Self *Var1 )
     	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
     		Wait  1`
     		Goto  0
     	EndIf
     	Wait  1`
     EndLoop
     Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
     Add   *Var0  00000005 
     Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
     Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_SpikedGoombanditShuffling )
     Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
     Call  IdleRunToGoal     ( .Actor:Self  0` )
     Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_SpikedGoombandit )
     Loop  00000014 
     Label  1
    	     Call  GetStatusFlags    ( .Actor:Self *Var1 )
    	     If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
    		     Wait  1`
    		     Goto  1
    	     EndIf
    	     Wait  1`
     EndLoop
     Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
     Sub   *Var0  00000005 
     Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
     Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_SpikedGoombanditShuffling )
     Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
     Call  IdleRunToGoal     ( .Actor:Self  0` )
     Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_SpikedGoombandit )
     Loop  00000050 
    	Label  2
    	Call  GetStatusFlags    ( .Actor:Self *Var1 )
    	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
    		Wait  1`
    		Goto  2
    	EndIf
     Wait  1`
     EndLoop
     Goto  A
     Return
     End
}

#new:Script $Script_HandleEvent_SpikedGoombandit 
{
     Call  UseIdleAnimation  ( .Actor:Self .False )
     Call  EnableIdleScript  ( .Actor:Self .False )
     Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
     Call  GetLastEvent      ( .Actor:Self *Var0 )
     Switch  *Var0 
          CaseOR  ==  .Event:HitCombo % 9
    	     CaseOR  ==  .Event:Hit % A
    		     SetConst  *Var0  00000001 
    		     SetConst  *Var1  00270006 
   		     ExecWait  DoNormalHit 
          EndCaseGroup
   	     Case  ==  .Event:BurnHit % E
     	     SetConst  *Var0  00000001 
     	     SetConst  *Var1  00270007 
     	     SetConst  *Var2  00270008 
     	     ExecWait  DoBurnHit 
          Case  ==  .Event:BurnDeath % 24
    		     SetConst  *Var0  00000001 
    		     SetConst  *Var1  00270007 
    		     SetConst  *Var2  00270008 
    		     ExecWait  DoBurnHit 
    		     SetConst  *Var0  00000001 
    		     SetConst  *Var1  00270008 
               Call ActorExists ( .Actor:Enemy0 *Var2 )
               If *Var2 == .True
                    Call AddActorVar ( .Actor:Enemy0 .AVar:HasSummoned 1` )
               EndIf
               ExecWait  DoDeath
    		     Return
    	     Case  ==  .Event:SpinSmashHit % B
    		     SetConst  *Var0  00000001 
    		     SetConst  *Var1  00270006 
    		     ExecWait  DoSpinSmashHit 
    	     Case  ==  .Event:SpinSmashDeath % 21
    		     SetConst  *Var0  00000001 
    		     SetConst  *Var1  00270006 
    		     ExecWait  DoSpinSmashHit 
    		     SetConst  *Var0  00000001 
    		     SetConst  *Var1  00270005 
               Call ActorExists ( .Actor:Enemy0 *Var2 )
               If *Var2 == .True
                    Call AddActorVar ( .Actor:Enemy0 .AVar:HasSummoned 1` )
               EndIf
               ExecWait  DoDeath
    		     Return
    	     Case  ==  .Event:ShockHit % 2F
    		     SetConst  *Var0  00000001 
    		     SetConst  *Var1  0027000E 
    		     ExecWait  DoShockHit 
    		     SetConst  *Var0  00000001 
    		     SetConst  *Var1  00270006 
    		     ExecWait  DoJumpBack 
    		     Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
    		     Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
    		     Call  SetAnimation  ( .Actor:Self 00000001 00270007 )
    		     Call  SetGoalToHome ( .Actor:Self )
    		     Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    		     Call  RunToGoal     ( .Actor:Self  0` .False )
    		     Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
    		     Wait  5`
    		     Call  SetAnimation  ( .Actor:Self 00000001 00270001 )
    		     Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
    		     Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
    	     Case  ==  .Event:ShockDeath % 26
    		     SetConst  *Var0  00000001 
    		     SetConst  *Var1  0027000C 
    		     ExecWait  DoShockHit 
    		     SetConst  *Var0  00000001 
    		     SetConst  *Var1  00270005
               Call ActorExists ( .Actor:Enemy0 *Var2 )
               If *Var2 == .True
                    Call AddActorVar ( .Actor:Enemy0 .AVar:HasSummoned 1` )
               EndIf 
               ExecWait  DoDeath
    		     Return
    	     Case  ==  .Event:StarBeam % 13
    	     CaseOR  ==  00000017 % 17
    	     CaseOR  ==  .Event:Immune % 19
    	     CaseOR  ==  .Event:AirLiftFailed % 1F
    		     SetConst  *Var0  00000001 
    		     SetConst  *Var1  00270001 
    		     ExecWait  DoImmune 
    	     EndCaseGroup
    	     Case  ==  .Event:Death % 20
    		     SetConst  *Var0  00000001 
    		     SetConst  *Var1  00270006 
    		     ExecWait  DoNormalHit 
    		     Wait  10`
    		     SetConst  *Var0  00000001 
    		     SetConst  *Var1  00270006 
               Call ActorExists ( .Actor:Enemy0 *Var2 )
               If *Var2 == .True
                    Call AddActorVar ( .Actor:Enemy0 .AVar:HasSummoned 1` )
               EndIf 
               ExecWait  DoDeath
    		     Return
    	     Case  ==  .Event:EndFirstStrike % 35
    		     Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
    		     Call  SetAnimation  ( .Actor:Self 00000001 00270003 )
    		     Call  SetGoalToHome ( .Actor:Self )
    		     Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    		     Call  RunToGoal     ( .Actor:Self  0` .False )
    		     Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
    		     Call  HPBarToHome   ( .Actor:Self )
    	     Case  ==  .Event:RecoverStatus % 31
    		     SetConst  *Var0  00000001 
    		     SetConst  *Var1  00270001 
    		     ExecWait  DoRecover 
    	     Case  ==  .Event:ScareAway % 39
    		     SetConst  *Var0  00000001 
    		     SetConst  *Var1  00270003 
    		     SetConst  *Var2  00270006 
    		     ExecWait  DoScareAway 
    		     Return
    	     Case  ==  .Event:BeginAirLift % 3A
    		     SetConst  *Var0  00000001 
    		     SetConst  *Var1  00270003 
    		     ExecWait  DoAirLift 
    	     Case  ==  .Event:BlowAway % 16
    		     SetConst  *Var0  00000001 
    		     SetConst  *Var1  00270006 
    		     ExecWait  DoBlowAway 
    		     Return
    	     Default
     EndSwitch
     Call  SetAnimation      ( .Actor:Self 00000001 00270001 )
     Call  EnableIdleScript  ( .Actor:Self .True )
     Call  UseIdleAnimation  ( .Actor:Self .True )
     Return
     End
}

#new:FloatTable $FloatTable_SpikedGoombandit 
{
0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_SpikedGoombandit 
{
     Call  UseIdleAnimation  ( .Actor:Self .False )
     Call  EnableIdleScript  ( .Actor:Self .False )
     ExecWait $PirateSpikebonk
     Call  EnableIdleScript  ( .Actor:Self .True )
     Call  UseIdleAnimation  ( .Actor:Self .True )
     Return
     End
}

#new:Script $PirateSpikebonk
{
     Call  UseIdleAnimation  ( .Actor:Self .False )
     Call  EnableIdleScript  ( .Actor:Self .False )
     Call  SetTargetActor    ( .Actor:Self .Actor:Player )
     Call  UseBattleCamPreset    ( 0000003F )
     Call  BattleCamTargetActor  ( .Actor:Self )
     Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
     Call  SetAnimation      ( .Actor:Self 00000001 00270003 )
     Call  SetGoalToTarget   ( .Actor:Self )
     Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
     Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
     Call  RunToGoal ( .Actor:Self  0` .False )
     Call  SetAnimation      ( .Actor:Self 00000001 00270001 )
     Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
     Wait  1`
     Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
     Wait  5`
     Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
     Call  SetAnimation      ( .Actor:Self 00000001 00270004 )
     Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
     Switch  *Var0 
  	     CaseOR  ==  .HitResult:Miss % 6
   	     CaseOR  ==  .HitResult:Lucky % 5
   		     Set   *VarA  *Var0 
  		     Call  SetGoalToTarget   ( .Actor:Self )
    		     Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    		     Sub   *Var0  0000000A 
    		     Set   *Var1  0000000A 
    		     Add   *Var2  00000003 
    		     Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    		     Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
    		     Thread
    			     Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
   			     Set   *Var0  00000000 
    			     Loop  00000010 
    				     Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
    				     Call  $Function_8021818C_SpikedGoombandit ( *Var1 *Var2 *Var4 *Var5 *Var0 )
    				     Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
    				     Set   *Var1  *Var4 
    				     Set   *Var2  *Var5 
    				     Set   *Var3  *Var6 
    				     Wait  1`
    			     EndLoop
    		     EndThread
               Thread
    			     Wait  6`
    			     Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
    		     EndThread
    		     Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
    		     Call  SetAnimation  ( .Actor:Self 00000001 0027000A )
    		     Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
    		     Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
    		     Wait  1`
    		     Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
    		     Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    		     Wait  1`
    		     Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    		     Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
    		     Call  SetAnimation  ( .Actor:Self 00000001 00270006 )
    		     Wait  5`
    		     If  *VarA  ==  .HitResult:Lucky % 5
    			     Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
    		     EndIf
    		     Wait  5`
    		     Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    		     Call  SetAnimation      ( .Actor:Self 00000001 00270004 )
    		     Call  SetGoalToTarget   ( .Actor:Self )
    		     Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    		     Add   *Var0  00000014 
    		     Set   *Var1  00000000 
    		     Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   		     Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
   		     Thread
    			     Wait  4`
    			     Set   *Var0  000000B4 
    			     Loop  00000004 
    				     Sub   *Var0  0000002D 
    				     Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
    				     Wait  1`
    			     EndLoop
    			     Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
    		     EndThread
    		     Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
    		     Call  SetAnimation      ( .Actor:Self 00000001 00270007 )
    		     Wait  5`
    		     Call  UseBattleCamPreset    ( 00000002 )
    		     Call  YieldTurn ( )
    		     Call  SetActorYaw       ( .Actor:Self  180` )
    		     Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
    		     Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
    		     Call  SetGoalToHome     ( .Actor:Self )
    		     Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
    		     Call  RunToGoal ( .Actor:Self  0` .False )
    		     Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
    		     Call  SetActorYaw       ( .Actor:Self  0` )
    		     Wait  5`
    		     Call  SetAnimation      ( .Actor:Self 00000001 00270001 )
    		     Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  		     Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
    		     Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
    		     Call  EnableIdleScript  ( .Actor:Self .True )
    		     Call  UseIdleAnimation  ( .Actor:Self .True )
    		     Return
    	     EndCaseGroup
    	     Default
    		     Call  SetGoalToTarget       ( .Actor:Self )
    		     Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
    		     Thread
    			     Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
   			     Set   *Var0  00000000 
    			     Loop  00000010 
    				     Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
    				     Call  $Function_8021818C_SpikedGoombandit ( *Var1 *Var2 *Var4 *Var5 *Var0 )
    				     Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
    				     Set   *Var1  *Var4 
    				     Set   *Var2  *Var5 
    				     Set   *Var3  *Var6 
    				     Wait  1`
    			     EndLoop
    		     EndThread
    		     Thread
    			     Wait  6`
   			     Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
    		     EndThread
    		     Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
    		     Call  SetAnimation  ( .Actor:Self 00000001 0027000B )
    		     Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
    		     Wait  1`
    		     Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
    		     Wait  1`
     EndSwitch
     Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 .DMG_SpikedGoombandit_Spikebonk 00000020 )
     Switch  *Var0 
    	     CaseOR  ==  .HitResult:Hit % 0
    	     CaseOR  ==  .HitResult:QuakeImmune % 2
    		     Call  UseBattleCamPreset    ( 00000002 )
    		     Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
    		     Wait  1`
    		     Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    		     Wait  1`
    		     Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
    		     Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    		     Call  SetAnimation  ( .Actor:Self 00000001 00270001 )
    		     Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
    		     Add   *Var0  00000028 
    		     Set   *Var1  00000000 
  		     Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    		     Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
    		     Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
    		     Add   *Var0  0000001E 
    		     Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
    		     Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  		     Add   *Var0  00000014 
    		     Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
    		     Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
    		     Call  SetAnimation  ( .Actor:Self 00000001 00270001 )
    		     Wait  3`
    		     Call  YieldTurn ( )
    		     Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
    		     Call  SetAnimation  ( .Actor:Self 00000001 00270003 )
    		     Call  SetGoalToHome ( .Actor:Self )
    		     Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    		     Call  RunToGoal     ( .Actor:Self  0` .False )
    		     Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  	     EndCaseGroup
     EndSwitch
     Call  EnableIdleScript  ( .Actor:Self .True )
     Call  UseIdleAnimation  ( .Actor:Self .True )
     Return
     End
}