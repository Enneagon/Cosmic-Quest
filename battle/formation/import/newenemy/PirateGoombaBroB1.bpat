
#new:Actor $PirateGoombaBroB1 
{
    % stats
    [Index]        91b
    [Level]        20`b
    [MaxHP]         6`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_PirateGoombaBroB1
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_PirateGoombaBroB1
    [Script]      $Script_Init_PirateGoombaBroB1
    % move effectiveness
    [Escape]        0`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  80`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         32`b  32`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]    8`b  25`b % dx dy
}

#new:DefenseTable $DefenseTable_PirateGoombaBroB1 
{
    .Element:Normal 0`
    .Element:End
}

#new:StatusTable $StatusTable_PirateGoombaBroB1 
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep     100`
    .Status:Poison      0`
    .Status:Frozen      0`
    .Status:Dizzy     100`
    .Status:Fear        0`
    .Status:Static      0`
    .Status:Paralyze  100`
    .Status:Shrink    100`
    .Status:Stop      100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_PirateGoombaBroB1 
{
    00800000 01000000 001800FF $IdleAnimations_PirateGoombaBroB1 $DefenseTable_PirateGoombaBroB1 00000000 00000000 00FD0000 00000000
}

#new:IdleAnimations $IdleAnimations_PirateGoombaBroB1 
{
    .Status:Normal    00620002
    .Status:Stone     00620000
    .Status:Sleep     0062000D
    .Status:Poison    00620002
    .Status:Stop      00620000
    .Status:Static    00620002
    .Status:Paralyze  00620000
    .Status:Dizzy     0062000C
    .Status:Fear      0062000C
    .Status:End
}

#new:IdleAnimations $IdleAnimations_PirateGoombaBroB1Shuffling 
{
    .Status:Normal    00620006
    .Status:Stone     00620000
    .Status:Sleep     0062000D
    .Status:Poison    00620002
    .Status:Stop      00620000
    .Status:Static    00620006
    .Status:Paralyze  00620000
    .Status:Dizzy     0062000C
    .Status:Fear      0062000C
    .Status:End
}

#new:Script $Script_Init_PirateGoombaBroB1 
{
    Set *Var0 = ( *MB_DifficultyLevel + *MB_SectorsCompleted + 6` ) % Add to Minimum HP
    Call  $SetMaxHPByDifficulty ( *Var0 ) % Dynamically sets HP
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_PirateGoombaBroB1 )
    Call  BindIdle  ( .Actor:Self $Script_Idle_PirateGoombaBroB1 )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_PirateGoombaBroB1 )
    Call  $Function_80218A30_B ( )
    Return
    End
}

#new:Function $Function_80218A30_B 
{
    ADDIU     SP, SP, FFE8
    SW        RA, 10 (SP)
    JAL       ~Func:get_actor
    LW        A0, 148 (A0)
    LW        A0, 8 (V0)
    LBU       V1, 6 (A0)
    LI        V0, 2
    SRLV      V1, V1, V0
    SB        V1, 6 (A0)
    LW        RA, 10 (SP)
    JR        RA
    ADDIU     SP, SP, 18
}

#new:Function $Function_8021893C_B 
{
    ADDIU     SP, SP, FFD8
    SW        S4, 20 (SP)
    COPY      S4, A0
    SW        RA, 24 (SP)
    SW        S3, 1C (SP)
    SW        S2, 18 (SP)
    SW        S1, 14 (SP)
    SW        S0, 10 (SP)
    LW        S2, C (S4)
    LW        A1, 0 (S2)
    JAL       ~Func:get_variable
    ADDIU     S2, S2, 4
    LW        A1, 0 (S2)
    ADDIU     S2, S2, 4
    COPY      A0, S4
    JAL       ~Func:get_variable
    COPY      S0, V0
    LW        A1, 0 (S2)
    ADDIU     S2, S2, 4
    COPY      A0, S4
    JAL       ~Func:get_variable
    COPY      S1, V0
    COPY      S3, V0
    LW        A1, 0 (S2)
    ADDIU     S2, S2, 4
    COPY      A0, S4
    JAL       ~Func:get_variable
    SUBU      S3, S3, S0
    COPY      S0, V0
    COPY      A0, S4
    LW        A1, 0 (S2)
    JAL       ~Func:get_variable
    SUBU      S0, S0, S1
    BNE       S3, R0, .oA0
    NOP
    BNE       S0, R0, .oA0
    COPY      A0, S4
    LW        A1, 0 (S2)
    BEQ       R0, R0, .oC8
    COPY      A2, V0
        .oA0
    MTC1      S3, F12
    NOP
    CVT.S.W   F12, F12
    MTC1      S0, F14
    NOP
    JAL       $Function_802187B0_B
    CVT.S.W   F14, F14
    COPY      A0, S4
    LW        A1, 0 (S2)
    ADDIU     A2, V0, FFA6
        .oC8
    JAL       ~Func:set_variable
    NOP
    LI        V0, 2
    LW        RA, 24 (SP)
    LW        S4, 20 (SP)
    LW        S3, 1C (SP)
    LW        S2, 18 (SP)
    LW        S1, 14 (SP)
    LW        S0, 10 (SP)
    JR        RA
    ADDIU     SP, SP, 28
}

#new:Function $Function_802187B0_B
 {
    ADDIU     SP, SP, FFD8
    SDC1      F22, 20 (SP)
    MOV.S     F22, F12
    SDC1      F20, 18 (SP)
    SW        RA, 10 (SP)
    JAL       ~Func:length2D
    MOV.S     F20, F14
    TRUNC.W.S F6, F20
    MFC1      V0, F6
    NOP
    BLTZL     V0, .o30
    SUBU      V0, R0, V0
        .o30
    MTC1      V0, F2
    NOP
    CVT.S.W   F2, F2
    DIV.S     F4, F2, F0
    CLEAR     A0
    LI        A2, 5A
    COPY      A1, A0
    LA        A3, $FloatTable_8021F984_B
    ANDI      V0, A2, FFFF
        .o58
    ANDI      V1, A0, FFFF
    SUBU      V0, V0, V1
    SRL       V1, V0, 1F
    ADDU      V0, V0, V1
    SRA       V0, V0, 1
    ADDU      V1, A0, V0
    ANDI      V0, V1, FFFF
    SLL       V0, V0, 2
    ADDU      V0, V0, A3
    LWC1      F0, 0 (V0)
    C.LT.S    F0, F4
    NOP
    BC1FL     .o94
    COPY      A2, V1
    COPY      A0, V1
        .o94
    ADDIU     A1, A1, 1
    ANDI      V0, A1, FFFF
    SLTIU     V0, V0, 7
    BNE       V0, R0, .o58
    ANDI      V0, A2, FFFF
    ANDI      V0, A0, FFFF
    SLL       V0, V0, 2
    ANDI      V1, A2, FFFF
    LTF       F2, V0 ($FloatTable_8021F984_B)
    SLL       V1, V1, 2
    SUB.S     F2, F2, F4
    LTF       F0, V1 ($FloatTable_8021F984_B)
    SUB.S     F0, F0, F4
    ABS.S     F2, F2
    ABS.S     F0, F0
    C.LT.S    F2, F0
    NOP
    BC1F      .oF4
    COPY      V1, A2
    COPY      V1, A0
        .oF4
    MTC1      R0, F0
    NOP
    C.LT.S    F22, F0
    NOP
    BC1F      .o130
    NOP
    C.LE.S    F0, F20
    NOP
    BC1F      .o128
    LI        V0, B4
    SUBU      V1, V0, V1
    MTC1      R0, F0
    NOP
        .o128
    C.LT.S    F22, F0
    NOP
        .o130
    BC1F      .o148
    NOP
    C.LT.S    F20, F0
    NOP
    BC1TL     .o148
    ADDIU     V1, V1, B4
        .o148
    MTC1      R0, F0
    NOP
    C.LE.S    F0, F22
    NOP
    BC1F      .o174
    NOP
    C.LT.S    F20, F0
    NOP
    BC1F      .o174
    LI        V0, 168
    SUBU      V1, V0, V1
        .o174
    LW        RA, 10 (SP)
    LDC1      F22, 20 (SP)
    LDC1      F20, 18 (SP)
    ANDI      V0, V1, FFFF
    JR        RA
    ADDIU     SP, SP, 28
}


#new:Script $Script_Idle_PirateGoombaBroB1 
{
    Label  A
    Call  RandInt   ( 00000050 *Var0 )
    Add   *Var0  00000050
    Loop  *Var0
        Label  0
        Call  GetStatusFlags    ( .Actor:Self *Var1 )
        If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
            Wait  1`
            Goto  0
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var0  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_PirateGoombaBroB1Shuffling )
    Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  IdleRunToGoal     ( .Actor:Self  0` )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_PirateGoombaBroB1 )
    Loop  00000014
        Label  1
        Call  GetStatusFlags    ( .Actor:Self *Var1 )
        If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
            Wait  1`
            Goto  1
        EndIf
        Wait  1`
    EndLoop
    Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
    Sub   *Var0  00000005
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_PirateGoombaBroB1Shuffling )
    Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  IdleRunToGoal     ( .Actor:Self  0` )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_PirateGoombaBroB1 )
    Loop  00000050
        Label  2
        Call  GetStatusFlags    ( .Actor:Self *Var1 )
        If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
            Wait  1`
            Goto  2
        EndIf
        Wait  1`
    EndLoop
    Goto  A
    Return
    End
}

#new:Script $Script_HandleEvent_PirateGoombaBroB1 
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self .False )
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetLastEvent      ( .Actor:Self *Var0 )
    Switch  *Var0
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var0  00000001
            SetConst  *Var1  00620009
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var0  00000001
            SetConst  *Var1  0062000E
            SetConst  *Var2  0062000F
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var0  00000001
            SetConst  *Var1  0062000E
            SetConst  *Var2  0062000F
            ExecWait  DoBurnHit
            SetConst  *Var0  00000001
            SetConst  *Var1  0062000F
            Call AddActorVar ( .Actor:Enemy0 .AVar:HasSummoned 1` )
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var0  00000001
            SetConst  *Var1  00620009
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var0  00000001
            SetConst  *Var1  00620009
            ExecWait  DoSpinSmashHit
            SetConst  *Var0  00000001
            SetConst  *Var1  00620009
            Call AddActorVar ( .Actor:Enemy0 .AVar:HasSummoned 1` )
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var0  00000001
            SetConst  *Var1  00620009
            ExecWait  DoShockHit
            SetConst  *Var0  00000001
            SetConst  *Var1  00620009
            ExecWait  DoJumpBack
            Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 0062000C )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self  0` .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
            Wait  5`
            Call  SetAnimation  ( .Actor:Self 00000001 00620002 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var0  00000001
            SetConst  *Var1  00620009
            ExecWait  DoShockHit
            SetConst  *Var0  00000001
            SetConst  *Var1  00620009
            Call AddActorVar ( .Actor:Enemy0 .AVar:HasSummoned 1` )
            ExecWait  DoDeath
            Return
        Case  ==  .Event:StarBeam % 13
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var0  00000001
            SetConst  *Var1  00620002
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var0  00000001
            SetConst  *Var1  00620009
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var0  00000001
            SetConst  *Var1  00620009
            Call AddActorVar ( .Actor:Enemy0 .AVar:HasSummoned 1` )
            ExecWait  DoDeath
            Return
        Case  ==  .Event:EndFirstStrike % 35
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00620006 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
            Call  RunToGoal     ( .Actor:Self  0` .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  HPBarToHome   ( .Actor:Self )
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var0  00000001
            SetConst  *Var1  00620002
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var0  00000001
            SetConst  *Var1  00620006
            SetConst  *Var2  00620009
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var0  00000001
            SetConst  *Var1  00620006
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var0  00000001
            SetConst  *Var1  00620009
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call  SetAnimation      ( .Actor:Self 00000001 00620002 )
    Call  EnableIdleScript  ( .Actor:Self .True )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:FloatTable $FloatTable_8021F984_B 
{
    0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
    0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
    0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
    0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
    0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
    0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
    0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
    0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
    0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
    0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
    0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
    0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_PirateGoombaBroB1 
{
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self .False )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseBattleCamPreset    ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00620006 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  RunToGoal ( .Actor:Self  0` .False )
    Call  SetAnimation      ( .Actor:Self 00000001 00620002 )
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
    Wait  1`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
    Wait  5`
    Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 00620008 )
    Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var0
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *VarA  *Var0
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
            Sub   *Var0  0000000A
            Set   *Var1  0000000A
            Add   *Var2  00000003
            Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
                Set   *Var0  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
                    Call  $Function_8021893C_B    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
                    Set   *Var1  *Var4
                    Set   *Var2  *Var5
                    Set   *Var3  *Var6
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00620008 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 0062000D )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00620009 )
            Wait  5`
            If  *VarA  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Wait  5`
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 00620008 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
            Add   *Var0  00000014
            Set   *Var1  00000000
            Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
            Thread
                Wait  4`
                Set   *Var0  000000B4
                Loop  00000004
                    Sub   *Var0  0000002D
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
                    Wait  1`
                EndLoop
                Call  SetAnimation  ( .Actor:Self 00000001 00620008 )
            EndThread
            Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
            Call  SetAnimation      ( .Actor:Self 00000001 0062000C )
            Wait  5`
            Call  UseBattleCamPreset    ( 00000002 )
            Call  YieldTurn ( )
            Call  SetActorYaw       ( .Actor:Self  180` )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetGoalToHome     ( .Actor:Self )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal ( .Actor:Self  0` .False )
            Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
            Call  SetActorYaw       ( .Actor:Self  0` )
            Wait  5`
            Call  SetAnimation      ( .Actor:Self 00000001 00620002 )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
            Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  EnableIdleScript  ( .Actor:Self .True )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
        Default
            Call  SetGoalToTarget       ( .Actor:Self )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
            Thread
                Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
                Set   *Var0  00000000
                Loop  00000010
                    Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
                    Call  $Function_8021893C_B    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
                    Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
                    Set   *Var1  *Var4
                    Set   *Var2  *Var5
                    Set   *Var3  *Var6
                    Wait  1`
                EndLoop
            EndThread
            Thread
                Wait  6`
                Call  SetAnimation  ( .Actor:Self 00000001 00620008 )
            EndThread
            Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00620008 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
            Wait  1`
    EndSwitch
    Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 .DMG_PirateGoombaBroB_Bigbonk 00000020 )
    Switch  *Var0
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  .HitResult:QuakeImmune % 2
            Call  UseBattleCamPreset    ( 00000002 )
            Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
            Wait  1`
            Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Wait  1`
            Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
            Call  SetAnimation  ( .Actor:Self 00000001 00620002 )
            Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Add   *Var0  00000028
            Set   *Var1  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
            Add   *Var0  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
            Add   *Var0  00000014
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
            Call  SetAnimation  ( .Actor:Self 00000001 00620002 )
            Wait  3`
            Call  YieldTurn ( )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 00620006 )
            Call  SetGoalToHome ( .Actor:Self )
            Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
            Call  RunToGoal     ( .Actor:Self  0` .False )
            Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self .True )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}
