% Place Holder Animations
#define .Anim:PlaceHolderStill    0045000C
#define .Anim:PlaceHolderIdle      0045000D
#define .Anim:PlaceHolderShot    0045000E
#define .Anim:PlaceHolderProjectile  0045000F
#define .Anim:PlaceHolderFireball  00450010
#define .Anim:PlaceHolderHurt  00450011
#define .Anim:PlaceHolderDead  00450012
#define .Anim:PlaceHolderTalk  00450013


% Place Holder Parts
#define .Part:PlaceHolder 1
#define .Part:Projectile 2

% PlaceHolder Stats
#define .HP:PlaceHolder 2`b
#define .Damage:Projectile 1`


#new:Actor $PlaceHolder 
{
    % stats
    [Index]        27b
    [Level]        5`b
    [MaxHP]         .HP:PlaceHolder
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_PlaceHolder
    % ai
    [PartsCount]    2`s
    [PartsTable]  $PartsTable_PlaceHolder
    [Script]      $Script_Init_PlaceHolder
    % move effectiveness
    [Escape]       95`b
    [Item]         100`b
    [AirLift]      100`b
    [Hurricane]    100`b % Bow's "Spook" as well
    [UpAndAway]    100`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         28`b  24`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:DefenseTable $DefenseTable_PlaceHolder 
{
    .Element:Normal 0`
    .Element:End
}

#new:StatusTable $StatusTable_PlaceHolder 
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      100`
    .Status:Poison     100`
    .Status:Frozen      0`
    .Status:Dizzy      100`
    .Status:Fear      100`
    .Status:Static     100`
    .Status:Paralyze   100`
    .Status:Shrink     100`
    .Status:Stop       100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_PlaceHolder { %ActorPartBlueprint struct in decomp
    /% s32 flags %/                 00800000
    /% s8 index %/                  ~Byte:.Part:PlaceHolder
    /% Vec3b posOffset %/           00b 00b 00b
    /% Vec2b targetOffset %/        00b 18b %for cursor when selecting to attack in battle
    /% s16 opacity %/               00FFs
    /% s32* IdleAnimations %/       $IdleAnimations_PlaceHolder
    /% s32* defenseTable %/         $DefenseTable_PlaceHolder
    /% s32 eventFlags %/            00000000
    /% s32 elementImmunityFlags %/  00000000
    /% s8 unk_1C %/                 FFb
    /% s8 unk_1D %/                 F6b
    /% s8 unk_1E %/                 00b
    /% s8 unk_1F %/                 00b
    /% s8 unk_20 %/                 00000000
    
    /% Fireball %/
    /% s32 flags %/                 00120001
    /% s8 index %/                  ~Byte:.Part:Projectile
    /% Vec3b posOffset %/           00b 00b 00b
    /% Vec2b targetOffset %/        00b 00b %for cursor when selecting to attack in battle
    /% s16 opacity %/               00FFs
    /% s32* IdleAnimations %/       $IdleAnimations_Projectile
    /% s32* defenseTable %/         $DefenseTable_PlaceHolder
    /% s32 eventFlags %/            00000000
    /% s32 elementImmunityFlags %/  00000000
    /% s8 unk_1C %/                 00b
    /% s8 unk_1D %/                 00b
    /% s8 unk_1E %/                 00b
    /% s8 unk_1F %/                 00b
    /% s8 unk_20 %/                 00000000
    
}

#new:IdleAnimations $IdleAnimations_PlaceHolder 
{
    .Status:Normal    .Anim:PlaceHolderIdle
    .Status:Stone     .Anim:PlaceHolderStill
    .Status:Sleep     .Anim:PlaceHolderIdle
    .Status:Poison    .Anim:PlaceHolderIdle
    .Status:Stop      .Anim:PlaceHolderStill
    .Status:Static    .Anim:PlaceHolderIdle
    .Status:Paralyze  .Anim:PlaceHolderStill
    .Status:Dizzy     .Anim:PlaceHolderIdle
    .Status:Fear      .Anim:PlaceHolderIdle
    .Status:End
}

#new:IdleAnimations $IdleAnimations_Projectile 
{
    .Status:Normal    .Anim:PlaceHolderProjectile
    .Status:End
}

#new:Script $Script_Init_PlaceHolder 
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_PlaceHolder )
    Call  BindIdle  ( .Actor:Self $Script_Idle_PlaceHolder )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_PlaceHolder )
    Return
    End
}

#new:Script $Script_Idle_PlaceHolder
{
    Return
    End
}

#new:Script $Script_ReturnHome_PlaceHolder
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    SetConst  *Var0  .Part:PlaceHolder
    SetConst  *Var1  .Anim:PlaceHolderIdle
    ExecWait  DoReturnHome
    Call  SetAnimation  ( .Actor:Self .Part:PlaceHolder .Anim:PlaceHolderIdle )
    Return
    End
}

#new:Script $Script_HandleEvent_PlaceHolder
{
    Call EnableIdleScript ( .Actor:Self .False )
    Call UseIdleAnimation ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var0 )
    Switch  *Var0
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var0  .Part:PlaceHolder
            SetConst  *Var1  .Anim:PlaceHolderHurt
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var0  .Part:PlaceHolder
            SetConst  *Var1  .Anim:PlaceHolderHurt
            SetConst  *Var2  .Anim:PlaceHolderHurt
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var0  .Part:PlaceHolder
            SetConst  *Var1  .Anim:PlaceHolderHurt
            SetConst  *Var2  .Anim:PlaceHolderHurt
            ExecWait  DoBurnHit
            SetConst  *Var0  .Part:PlaceHolder
            SetConst  *Var1  .Anim:PlaceHolderHurt
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var0  .Part:PlaceHolder
            SetConst  *Var1  .Anim:PlaceHolderHurt
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var0  .Part:PlaceHolder
            SetConst  *Var1  .Anim:PlaceHolderHurt
            ExecWait  DoSpinSmashHit
            SetConst  *Var0  .Part:PlaceHolder
            SetConst  *Var1  .Anim:PlaceHolderHurt %Death
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var0  .Part:PlaceHolder
            SetConst  *Var1  .Anim:PlaceHolderHurt
            ExecWait  DoShockHit
            SetConst  *Var0  .Part:PlaceHolder
            SetConst  *Var1  .Anim:PlaceHolderHurt
            ExecWait  DoJumpBack
            Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
            ExecWait  $Script_ReturnHome_PlaceHolder
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var0  .Part:PlaceHolder
            SetConst  *Var1  .Anim:PlaceHolderHurt
            ExecWait  DoShockHit
            SetConst  *Var0  .Part:PlaceHolder
            SetConst  *Var1  .Anim:PlaceHolderHurt %Dead
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var0  .Part:PlaceHolder
            SetConst  *Var1  .Anim:PlaceHolderIdle
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var0  .Part:PlaceHolder
            SetConst  *Var1  .Anim:PlaceHolderHurt
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var0  .Part:PlaceHolder
            SetConst  *Var1  .Anim:PlaceHolderHurt %Dead
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var0  .Part:PlaceHolder
            SetConst  *Var1  .Anim:PlaceHolderIdle
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var0  .Part:PlaceHolder
            SetConst  *Var1  .Anim:PlaceHolderIdle %Run 
            SetConst  *Var2  .Anim:PlaceHolderIdle %Scared
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var0  .Part:PlaceHolder
            SetConst  *Var1  .Anim:PlaceHolderHurt
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var0  .Part:PlaceHolder
            SetConst  *Var1  .Anim:PlaceHolderHurt
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call EnableIdleScript ( .Actor:Self .True )
    Call UseIdleAnimation ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_PlaceHolder
{
    Call EnableIdleScript ( .Actor:Self .False )
    Call UseIdleAnimation ( .Actor:Self .False )
    %Call  RandInt   ( 00000001 *Var0 )
    %If  *Var0  ==  00000000
        ExecWait  $Script_PlaceHolder_Projectile
    %Else
        %ExecWait  $Script_Jump_PNK_ShyGuy
    %EndIf
    Call EnableIdleScript ( .Actor:Self .True )
    Call UseIdleAnimation ( .Actor:Self .True )
    Return
    End
}


#new:Script $Script_PlaceHolder_Projectile
{
    Call EnableIdleScript ( .Actor:Self .False )
    Call UseIdleAnimation ( .Actor:Self .False )
    Call SetTargetActor    ( .Actor:Self .Actor:Player )
    Call SetAnimation ( .Actor:Self .Part:PlaceHolder .Anim:PlaceHolderShot )
    Thread
        Wait 10`
        Call PlaySoundAtActor ( .Actor:Self 0000010F )
        Wait 14`
        Call PlaySoundAtActor ( .Actor:Self 0000010F )
    EndThread
    Wait 40`
    Call PlaySoundAtActor  ( .Actor:Self 000002E9 )
    Wait 18`
    Call SetAnimation ( .Actor:Self .Part:Projectile .Anim:PlaceHolderProjectile )
    Wait 15`
    Call GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
    Add *Var1 10`
    Call SetPartPos        ( .Actor:Self .Part:Projectile  *Var0  *Var1  *Var2 )
    Call SetPartScale  ( .Actor:Self .Part:Projectile *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call SetPartJumpGravity    ( .Actor:Self .Part:Projectile *Fixed[3.0] )
    Call SetPartFlagBits   ( .Actor:Self .Part:Projectile 00000001 .False )
    Call SetGoalToTarget   ( .Actor:Self )
    Call GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Call EnemyTestTarget   ( .Actor:Self *Var3 ~Flags:DamageType:0 00000000 1` 00000010 )
    Switch  *Var3 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Add *Var1 -32` %target mario's feet
            Call PlaySoundAtActor 	( .Actor:Self 000003E8 )
            Call JumpPartTo        ( .Actor:Self .Part:Projectile *Var0 *Var1 *Var2  15` .True )
            Call SetPartFlagBits   ( .Actor:Self .Part:Projectile 00000001 .True )
            Wait  2`
        EndCaseGroup
        Default
            Call PlaySoundAtActor 	( .Actor:Self 000003E8 )
            Call JumpPartTo        ( .Actor:Self .Part:Projectile *Var0 *Var1 *Var2  15` .True )
            Call SetPartFlagBits   ( .Actor:Self .Part:Projectile 00000001 .True )
            Wait  2`
            Call EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 .Damage:Projectile 00000020 )
    EndSwitch
    Call EnableIdleScript ( .Actor:Self .True )
    Call UseIdleAnimation ( .Actor:Self .True )
    Return
    End
}
